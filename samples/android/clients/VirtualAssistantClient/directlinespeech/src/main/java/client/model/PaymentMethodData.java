/*
 * Microsoft Bot Connector API - v3.0
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    ï¿½ 2016 Microsoft
 *
 * OpenAPI spec version: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Indicates a set of supported payment methods and any associated payment method specific data for those methods
 */
@ApiModel(description = "Indicates a set of supported payment methods and any associated payment method specific data for those methods")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-29T10:06:15.114-07:00")
public class PaymentMethodData {
  @SerializedName("supportedMethods")
  private List<String> supportedMethods = null;

  @SerializedName("data")
  private Object data = null;

  public PaymentMethodData supportedMethods(List<String> supportedMethods) {
    this.supportedMethods = supportedMethods;
    return this;
  }

  public PaymentMethodData addSupportedMethodsItem(String supportedMethodsItem) {
    if (this.supportedMethods == null) {
      this.supportedMethods = new ArrayList<String>();
    }
    this.supportedMethods.add(supportedMethodsItem);
    return this;
  }

   /**
   * Required sequence of strings containing payment method identifiers for payment methods that the merchant web site accepts
   * @return supportedMethods
  **/
  @ApiModelProperty(value = "Required sequence of strings containing payment method identifiers for payment methods that the merchant web site accepts")
  public List<String> getSupportedMethods() {
    return supportedMethods;
  }

  public void setSupportedMethods(List<String> supportedMethods) {
    this.supportedMethods = supportedMethods;
  }

  public PaymentMethodData data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * A JSON-serializable object that provides optional information that might be needed by the supported payment methods
   * @return data
  **/
  @ApiModelProperty(value = "A JSON-serializable object that provides optional information that might be needed by the supported payment methods")
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodData paymentMethodData = (PaymentMethodData) o;
    return Objects.equals(this.supportedMethods, paymentMethodData.supportedMethods) &&
        Objects.equals(this.data, paymentMethodData.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportedMethods, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodData {\n");

    sb.append("    supportedMethods: ").append(toIndentedString(supportedMethods)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

