/*
 * Microsoft Bot Connector API - v3.0
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    ï¿½ 2016 Microsoft
 *
 * OpenAPI spec version: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Provides information about the options desired for the payment request
 */
@ApiModel(description = "Provides information about the options desired for the payment request")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-29T10:06:15.114-07:00")
public class PaymentOptions {
  @SerializedName("requestPayerName")
  private Boolean requestPayerName = null;

  @SerializedName("requestPayerEmail")
  private Boolean requestPayerEmail = null;

  @SerializedName("requestPayerPhone")
  private Boolean requestPayerPhone = null;

  @SerializedName("requestShipping")
  private Boolean requestShipping = null;

  @SerializedName("shippingType")
  private String shippingType = null;

  public PaymentOptions requestPayerName(Boolean requestPayerName) {
    this.requestPayerName = requestPayerName;
    return this;
  }

   /**
   * Indicates whether the user agent should collect and return the payer&#39;s name as part of the payment request
   * @return requestPayerName
  **/
  @ApiModelProperty(value = "Indicates whether the user agent should collect and return the payer's name as part of the payment request")
  public Boolean isRequestPayerName() {
    return requestPayerName;
  }

  public void setRequestPayerName(Boolean requestPayerName) {
    this.requestPayerName = requestPayerName;
  }

  public PaymentOptions requestPayerEmail(Boolean requestPayerEmail) {
    this.requestPayerEmail = requestPayerEmail;
    return this;
  }

   /**
   * Indicates whether the user agent should collect and return the payer&#39;s email address as part of the payment request
   * @return requestPayerEmail
  **/
  @ApiModelProperty(value = "Indicates whether the user agent should collect and return the payer's email address as part of the payment request")
  public Boolean isRequestPayerEmail() {
    return requestPayerEmail;
  }

  public void setRequestPayerEmail(Boolean requestPayerEmail) {
    this.requestPayerEmail = requestPayerEmail;
  }

  public PaymentOptions requestPayerPhone(Boolean requestPayerPhone) {
    this.requestPayerPhone = requestPayerPhone;
    return this;
  }

   /**
   * Indicates whether the user agent should collect and return the payer&#39;s phone number as part of the payment request
   * @return requestPayerPhone
  **/
  @ApiModelProperty(value = "Indicates whether the user agent should collect and return the payer's phone number as part of the payment request")
  public Boolean isRequestPayerPhone() {
    return requestPayerPhone;
  }

  public void setRequestPayerPhone(Boolean requestPayerPhone) {
    this.requestPayerPhone = requestPayerPhone;
  }

  public PaymentOptions requestShipping(Boolean requestShipping) {
    this.requestShipping = requestShipping;
    return this;
  }

   /**
   * Indicates whether the user agent should collect and return a shipping address as part of the payment request
   * @return requestShipping
  **/
  @ApiModelProperty(value = "Indicates whether the user agent should collect and return a shipping address as part of the payment request")
  public Boolean isRequestShipping() {
    return requestShipping;
  }

  public void setRequestShipping(Boolean requestShipping) {
    this.requestShipping = requestShipping;
  }

  public PaymentOptions shippingType(String shippingType) {
    this.shippingType = shippingType;
    return this;
  }

   /**
   * If requestShipping is set to true, then the shippingType field may be used to influence the way the user agent presents the user interface for gathering the shipping address
   * @return shippingType
  **/
  @ApiModelProperty(value = "If requestShipping is set to true, then the shippingType field may be used to influence the way the user agent presents the user interface for gathering the shipping address")
  public String getShippingType() {
    return shippingType;
  }

  public void setShippingType(String shippingType) {
    this.shippingType = shippingType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentOptions paymentOptions = (PaymentOptions) o;
    return Objects.equals(this.requestPayerName, paymentOptions.requestPayerName) &&
        Objects.equals(this.requestPayerEmail, paymentOptions.requestPayerEmail) &&
        Objects.equals(this.requestPayerPhone, paymentOptions.requestPayerPhone) &&
        Objects.equals(this.requestShipping, paymentOptions.requestShipping) &&
        Objects.equals(this.shippingType, paymentOptions.shippingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestPayerName, requestPayerEmail, requestPayerPhone, requestShipping, shippingType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentOptions {\n");

    sb.append("    requestPayerName: ").append(toIndentedString(requestPayerName)).append("\n");
    sb.append("    requestPayerEmail: ").append(toIndentedString(requestPayerEmail)).append("\n");
    sb.append("    requestPayerPhone: ").append(toIndentedString(requestPayerPhone)).append("\n");
    sb.append("    requestShipping: ").append(toIndentedString(requestShipping)).append("\n");
    sb.append("    shippingType: ").append(toIndentedString(shippingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

