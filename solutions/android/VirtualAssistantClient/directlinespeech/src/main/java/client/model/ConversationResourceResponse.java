/*
 * Microsoft Bot Connector API - v3.0
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    ï¿½ 2016 Microsoft
 *
 * OpenAPI spec version: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A response containing a resource
 */
@ApiModel(description = "A response containing a resource")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-29T10:06:15.114-07:00")
public class ConversationResourceResponse {
  @SerializedName("activityId")
  private String activityId = null;

  @SerializedName("serviceUrl")
  private String serviceUrl = null;

  @SerializedName("id")
  private String id = null;

  public ConversationResourceResponse activityId(String activityId) {
    this.activityId = activityId;
    return this;
  }

   /**
   * ID of the Activity (if sent)
   * @return activityId
  **/
  @ApiModelProperty(value = "ID of the Activity (if sent)")
  public String getActivityId() {
    return activityId;
  }

  public void setActivityId(String activityId) {
    this.activityId = activityId;
  }

  public ConversationResourceResponse serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * Service endpoint where operations concerning the conversation may be performed
   * @return serviceUrl
  **/
  @ApiModelProperty(value = "Service endpoint where operations concerning the conversation may be performed")
  public String getServiceUrl() {
    return serviceUrl;
  }

  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }

  public ConversationResourceResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id of the resource
   * @return id
  **/
  @ApiModelProperty(value = "Id of the resource")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationResourceResponse conversationResourceResponse = (ConversationResourceResponse) o;
    return Objects.equals(this.activityId, conversationResourceResponse.activityId) &&
        Objects.equals(this.serviceUrl, conversationResourceResponse.serviceUrl) &&
        Objects.equals(this.id, conversationResourceResponse.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityId, serviceUrl, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationResourceResponse {\n");

    sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

