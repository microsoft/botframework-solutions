/*
 * Microsoft Bot Connector API - v3.0
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    ï¿½ 2016 Microsoft
 *
 * OpenAPI spec version: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Address within a Payment Request
 */
@ApiModel(description = "Address within a Payment Request")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-29T10:06:15.114-07:00")
public class PaymentAddress {
  @SerializedName("country")
  private String country = null;

  @SerializedName("addressLine")
  private List<String> addressLine = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("dependentLocality")
  private String dependentLocality = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("sortingCode")
  private String sortingCode = null;

  @SerializedName("languageCode")
  private String languageCode = null;

  @SerializedName("organization")
  private String organization = null;

  @SerializedName("recipient")
  private String recipient = null;

  @SerializedName("phone")
  private String phone = null;

  public PaymentAddress country(String country) {
    this.country = country;
    return this;
  }

   /**
   * This is the CLDR (Common Locale Data Repository) region code. For example, US, GB, CN, or JP
   * @return country
  **/
  @ApiModelProperty(value = "This is the CLDR (Common Locale Data Repository) region code. For example, US, GB, CN, or JP")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public PaymentAddress addressLine(List<String> addressLine) {
    this.addressLine = addressLine;
    return this;
  }

  public PaymentAddress addAddressLineItem(String addressLineItem) {
    if (this.addressLine == null) {
      this.addressLine = new ArrayList<String>();
    }
    this.addressLine.add(addressLineItem);
    return this;
  }

   /**
   * This is the most specific part of the address. It can include, for example, a street name, a house number, apartment number, a rural delivery route, descriptive instructions, or a post office box number.
   * @return addressLine
  **/
  @ApiModelProperty(value = "This is the most specific part of the address. It can include, for example, a street name, a house number, apartment number, a rural delivery route, descriptive instructions, or a post office box number.")
  public List<String> getAddressLine() {
    return addressLine;
  }

  public void setAddressLine(List<String> addressLine) {
    this.addressLine = addressLine;
  }

  public PaymentAddress region(String region) {
    this.region = region;
    return this;
  }

   /**
   * This is the top level administrative subdivision of the country. For example, this can be a state, a province, an oblast, or a prefecture.
   * @return region
  **/
  @ApiModelProperty(value = "This is the top level administrative subdivision of the country. For example, this can be a state, a province, an oblast, or a prefecture.")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public PaymentAddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * This is the city/town portion of the address.
   * @return city
  **/
  @ApiModelProperty(value = "This is the city/town portion of the address.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public PaymentAddress dependentLocality(String dependentLocality) {
    this.dependentLocality = dependentLocality;
    return this;
  }

   /**
   * This is the dependent locality or sublocality within a city. For example, used for neighborhoods, boroughs, districts, or UK dependent localities.
   * @return dependentLocality
  **/
  @ApiModelProperty(value = "This is the dependent locality or sublocality within a city. For example, used for neighborhoods, boroughs, districts, or UK dependent localities.")
  public String getDependentLocality() {
    return dependentLocality;
  }

  public void setDependentLocality(String dependentLocality) {
    this.dependentLocality = dependentLocality;
  }

  public PaymentAddress postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * This is the postal code or ZIP code, also known as PIN code in India.
   * @return postalCode
  **/
  @ApiModelProperty(value = "This is the postal code or ZIP code, also known as PIN code in India.")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public PaymentAddress sortingCode(String sortingCode) {
    this.sortingCode = sortingCode;
    return this;
  }

   /**
   * This is the sorting code as used in, for example, France.
   * @return sortingCode
  **/
  @ApiModelProperty(value = "This is the sorting code as used in, for example, France.")
  public String getSortingCode() {
    return sortingCode;
  }

  public void setSortingCode(String sortingCode) {
    this.sortingCode = sortingCode;
  }

  public PaymentAddress languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * This is the BCP-47 language code for the address. It&#39;s used to determine the field separators and the order of fields when formatting the address for display.
   * @return languageCode
  **/
  @ApiModelProperty(value = "This is the BCP-47 language code for the address. It's used to determine the field separators and the order of fields when formatting the address for display.")
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }

  public PaymentAddress organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * This is the organization, firm, company, or institution at this address.
   * @return organization
  **/
  @ApiModelProperty(value = "This is the organization, firm, company, or institution at this address.")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public PaymentAddress recipient(String recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * This is the name of the recipient or contact person.
   * @return recipient
  **/
  @ApiModelProperty(value = "This is the name of the recipient or contact person.")
  public String getRecipient() {
    return recipient;
  }

  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }

  public PaymentAddress phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * This is the phone number of the recipient or contact person.
   * @return phone
  **/
  @ApiModelProperty(value = "This is the phone number of the recipient or contact person.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentAddress paymentAddress = (PaymentAddress) o;
    return Objects.equals(this.country, paymentAddress.country) &&
        Objects.equals(this.addressLine, paymentAddress.addressLine) &&
        Objects.equals(this.region, paymentAddress.region) &&
        Objects.equals(this.city, paymentAddress.city) &&
        Objects.equals(this.dependentLocality, paymentAddress.dependentLocality) &&
        Objects.equals(this.postalCode, paymentAddress.postalCode) &&
        Objects.equals(this.sortingCode, paymentAddress.sortingCode) &&
        Objects.equals(this.languageCode, paymentAddress.languageCode) &&
        Objects.equals(this.organization, paymentAddress.organization) &&
        Objects.equals(this.recipient, paymentAddress.recipient) &&
        Objects.equals(this.phone, paymentAddress.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, addressLine, region, city, dependentLocality, postalCode, sortingCode, languageCode, organization, recipient, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentAddress {\n");

    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    dependentLocality: ").append(toIndentedString(dependentLocality)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    sortingCode: ").append(toIndentedString(sortingCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

