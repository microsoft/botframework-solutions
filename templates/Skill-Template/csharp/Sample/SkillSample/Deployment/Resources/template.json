{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "suffix": {
      "type": "string",
      "defaultValue": "[take(uniqueString(resourceGroup().id), 7)]"
    },
    "microsoftAppId": {
      "type": "string"
    },
    "microsoftAppPassword": {
      "type": "string"
    },
    "useCosmosDb": {
      "type": "bool",
      "defaultValue": true
    },
    "cosmosDbName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "useStorage": {
      "type": "bool",
      "defaultValue": true
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "appServicePlanSku": {
      "type": "object",
      "defaultValue": {
        "tier": "Standard",
        "name": "S1"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "botWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "botServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-', parameters('suffix'))]"
    },
    "botServiceSku": {
      "type": "string",
      "defaultValue": "S1"
    },
    "luisServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('name'), '-luis-', parameters('suffix'))]"
    },
    "luisServiceSku": {
      "type": "string",
      "defaultValue": "S0"
    },
    "luisServiceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "botWebAppName": "[replace(parameters('botWebAppName'), '_', '')]",
    "storageAccountName": "[toLower(take(replace(replace(parameters('storageAccountName'), '-', ''), '_', ''), 24))]",
    "cosmosDbAccountName": "[toLower(take(replace(parameters('cosmosDbName'), '_', ''), 31))]",
    "botEndpoint": "[concat('https://', toLower(variables('botWebAppName')), '.azurewebsites.net/api/messages')]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "99ea37e6-a3e6-4102-a249-71c880607386",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "comments": "CosmosDB for bot state.",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "apiVersion": "2015-04-08",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ]
      },
      "condition": "[parameters('useCosmosDb')]"
    },
    {
      "comments": "storage account",
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "StorageV2",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "condition": "[parameters('useStorage')]"
    },
    {
      "comments": "app service plan",
      "type": "Microsoft.Web/serverFarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": "[parameters('appServicePlanSku')]",
      "properties": {}
    },
    {
      "comments": "app insights",
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "apiVersion": "2015-05-01",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('appInsightsLocation')]",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "comments": "bot web app",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-02-01",
      "name": "[variables('botWebAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "webSocketsEnabled": true,
          "appSettings": [
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('microsoftAppId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('microsoftAppPassword')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    },
    {
      "comments": "bot service",
      "type": "Microsoft.BotService/botServices",
      "kind": "sdk",
      "apiVersion": "2018-07-12",
      "name": "[parameters('botServiceName')]",
      "location": "global",
      "sku": {
        "name": "[parameters('botServiceSku')]"
      },
      "properties": {
        "displayName": "[parameters('botServiceName')]",
        "endpoint": "[variables('botEndpoint')]",
        "msaAppId": "[parameters('microsoftAppId')]",
        "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]",
        "developerAppInsightsApplicationId": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ApplicationId]"
      }
    },
    {
      "comments": "Cognitive service key for all LUIS apps.",
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "LUIS",
      "apiVersion": "2017-04-18",
      "name": "[parameters('luisServiceName')]",
      "location": "[parameters('luisServiceLocation')]",
      "sku": {
        "name": "[parameters('luisServiceSku')]"
      }
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[parameters('name')]"
    },
    "botWebAppName": {
      "type": "string",
      "value": "[variables('botWebAppName')]"
    },
    "ApplicationInsights": {
      "type": "object",
      "value": {
        "InstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
      }
    },
    "blobStorage": {
      "type": "object",
      "value": {
        "connectionString": "[if(parameters('useStorage'), concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-07-01').keys[0].value, ';EndpointSuffix=core.windows.net'), '')]",
        "container": "transcripts"
      }
    },
    "cosmosDb": {
      "type": "object",
      "value": {
        "cosmosDBEndpoint": "[if(parameters('useCosmosDb'), reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))).documentEndpoint, '')]",
        "authKey": "[if(parameters('useCosmosDb'), listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2015-04-08').primaryMasterKey, '')]",
        "databaseId": "botstate-db",
        "collectionId": "botstate-collection"
      }
    },
    "luis": {
      "type": "object",
      "value": {
        "accountName": "[parameters('luisServiceName')]",
        "region": "[parameters('luisServiceLocation')]",
        "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('luisServiceName')),'2017-04-18').key1]"
      }   
    }
  }
}