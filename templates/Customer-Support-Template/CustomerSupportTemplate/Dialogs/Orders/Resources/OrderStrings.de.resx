<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelTypeOnline" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="CartIdReprompt" xml:space="preserve">
    <value>Sorry, das habe ich nicht verstanden. Ihre Warenkorb-ID ist eine 10-stellige Nummer, die Sie unten auf Ihrer Warenkorb-Seite finden können.</value>
  </data>
  <data name="OrderNumberPrompt" xml:space="preserve">
    <value>Ich helfe gerne. Können Sie die Bestellnummer angeben?</value>
  </data>
  <data name="CancelOrderSuccessMessage" xml:space="preserve">
    <value>Ich habe Ihre Bestellung storniert.</value>
  </data>
  <data name="CurrentPromosMessage" xml:space="preserve">
    <value>Hier unsere aktuellen Aktionen:</value>
  </data>
  <data name="PhoneNumberReprompt" xml:space="preserve">
    <value>Sorry, das habe ich nicht verstanden. Bitte geben Sie eine gültige Telefonnummer mit der Gebietsnummer ein (ex. (800) 555-1234).</value>
  </data>
  <data name="PhoneNumberPrompt" xml:space="preserve">
    <value>Große. Ich fand die Reihenfolge. Können Sie bitte die Telefonnummer überprüfen, die mit dem Konto verbunden ist?</value>
  </data>
  <data name="FoundPromosMessage" xml:space="preserve">
    <value>Diese Promos können auf Ihren Warenkorb angewendet werden:</value>
  </data>
  <data name="OrderStatusMessage" xml:space="preserve">
    <value>Danke. Hier ist Ihr Bestellstatus:</value>
  </data>
  <data name="CartIdPrompt" xml:space="preserve">
    <value>Was ist Ihr Warenkorb Id?</value>
  </data>
  <data name="CancelOrderPrompt" xml:space="preserve">
    <value>Möchten Sie eine Bestellung stornieren, die nicht verschickt wurde?</value>
  </data>
  <data name="OrderNumberReprompt" xml:space="preserve">
    <value>Sorry, das habe ich nicht verstanden. Ihre Bestellnummer ist ein 7-stelliger Code, der in Ihrer Bestellbestätigung zu finden ist.</value>
  </data>
  <data name="CancelTypePrompt" xml:space="preserve">
    <value>Wie möchten Sie vorgehen?</value>
  </data>
  <data name="FindPromosForCartMessage" xml:space="preserve">
    <value>Ich kann überprüfen, ob die Artikel in Ihrem Warenkorb für eine der Aktionen qualifiziert sind.</value>
  </data>
  <data name="CancelTypeAgent" xml:space="preserve">
    <value>Sprechen Sie mit einem Agenten</value>
  </data>
</root>