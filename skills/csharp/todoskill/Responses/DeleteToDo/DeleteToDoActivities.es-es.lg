[import](../Shared/Card.lg)
[import](DeleteToDoTexts.es-es.lg)

# AskDeletionAllConfirmation
[Activity
    Text = @{AskDeletionAllConfirmation.Text(ListType)}
    Speak = @{AskDeletionAllConfirmation.Text(ListType)}
    InputHint = expectingInput
]

# AskDeletionAllConfirmationFailed
[Activity
    Text = @{AskDeletionAllConfirmationFailed.Text(ListType)}
    Speak = @{AskDeletionAllConfirmationFailed.Text(ListType)}
    InputHint = expectingInput
]

# DeletionAllConfirmationRefused
[Activity
    Text = @{DeletionAllConfirmationRefused.Text(TaskCount, ListType)}
    Speak = @{DeletionAllConfirmationRefused.Text(TaskCount, ListType)}
    Attachments = @{json(ShowToDoCard(Title, TotalNumber, ToDos, UseFile, CheckIconUrl, UnCheckIconUrl))}
    InputHint = ignoringInput
]

# ListTypePromptForDelete
[Activity
    Text = @{ListTypePromptForDelete.Text()}
    Speak = @{ListTypePromptForDelete.Text()}
    InputHint = expectingInput
]

# AskTaskIndexForDelete
[Activity
    Text = @{AskTaskIndexForDelete.Text()}
    Speak = @{AskTaskIndexForDelete.Text()}
    InputHint = expectingInput
]

# AskTaskIndexRetryForDelete
[Activity
    Text = @{AskTaskIndexRetryForDelete.Text()}
    Speak = @{AskTaskIndexRetryForDelete.Text()}
    InputHint = expectingInput
]

# DeleteAnotherTaskPrompt
[Activity
    Text = @{DeleteAnotherTaskPrompt.Text()}
    Speak = @{DeleteAnotherTaskPrompt.Text()}
    InputHint = expectingInput
]

# DeleteAnotherTaskConfirmFailed
[Activity
    Text = @{DeleteAnotherTaskConfirmFailed.Text()}
    Speak = @{DeleteAnotherTaskConfirmFailed.Text()}
    InputHint = expectingInput
]

# TaskDeleted
[Activity
    Text = @{TaskDeletedText(IsDeleteAll, ListType, TaskContent)}
    Speak = @{TaskDeletedText(IsDeleteAll, ListType, TaskContent)}
    Attachments = @{json(ShowToDoCard(Title, TotalNumber, ToDos, UseFile, CheckIconUrl, UnCheckIconUrl))}
    InputHint = ignoringInput
]

# TaskDeletedText(IsDeleteAll, ListType, TaskContent)
- IF: @{IsDeleteAll == true}
  - @{AfterAllTasksDeleted.Text(ListType)}
- ELSE:
  - @{AfterTaskDeleted.Text(TaskContent, ListType)}

