[import](SharedTexts.zh-cn.lg)
[import](../Cards/EmailWithOutButtonCard.lg)
[import](../Cards/EmailOverviewCard.lg)

# CancellingMessage
[Activity
    Text = @{CancellingMessage.Text()}
    Speak = @{CancellingMessage.Text()}
    InputHint = acceptingInput
]

# ConfirmSendFailed
[Activity
    Text = @{ConfirmSendFailed.Text()}
    Speak = @{ConfirmSendFailed.Text()}
    InputHint = expectingInput
]

# DidntUnderstandMessage
[Activity
    Text = @{DidntUnderstandMessage.Text()}
    Speak = @{DidntUnderstandMessage.Text()}
    InputHint = acceptingInput
]

# NoAuth
[Activity
    Text = @{NoAuth.Text()}
    Speak = @{NoAuth.Text()}
    InputHint = acceptingInput
]

# NoFocusMessage
[Activity
    Text = @{NoFocusMessage.Text()}
    Speak = @{NoFocusMessage.Text()}
    InputHint = expectingInput
]

# ConfirmSendWithRecipients
[Activity
    Text = @{ConfirmSendWithRecipientsText()}
    Speak = @{ConfirmSendWithRecipientsSpeak(emailSubject)}
    Attachments = @{json(EmailWithOutButtonCard(emailDetails))}
    InputHint = expectingInput
]

# ConfirmSendWithRecipientsText
- @{ConfirmSend.Text()} @{ConfirmSendRecipientsMessage.Text()}

# ConfirmSendWithRecipientsSpeak(emailDetails)
- @{ConfirmSend.Speak(emailDetails)} @{ConfirmSendRecipientsMessage.Text()}

# ConfirmSendRecipientsFailed
[Activity
    Text = @{ConfirmSendRecipientsFailed.Text()}
    Speak = @{ConfirmSendRecipientsFailed.Text()}
    InputHint = expectingInput
]

# ConfirmSendWithoutRecipients
[Activity
    Text = @{ConfirmSendWithoutRecipientsText()}
    Speak = @{ConfirmSendWithoutRecipientsSpeak(emailSubject)}
    Attachments = @{json(EmailWithOutButtonCard(emailDetails))}
    InputHint = expectingInput
]

# ConfirmSendWithoutRecipientsText
- @{ConfirmSend.Text()} @{ConfirmSendMessage.Text()}

# ConfirmSendWithoutRecipientsSpeak(emailSubject)
- @{ConfirmSend.Speak(emailSubject)} @{ConfirmSendMessage.Text()}

# ConfirmSendAfterConfirmRecipients
[Activity
    Text = @{ConfirmSendAfterConfirmRecipientsText(recipientsList)}
    Speak = @{ConfirmSendAfterConfirmRecipientsText(recipientsList)}
    InputHint = expectingInput
]

# ConfirmSendAfterConfirmRecipientsText(recipientsList)
- @{ConfirmSendRecipients.Text(recipientsList)} @{ConfirmSendMessage.Text()}

# NoEmailContent
[Activity
    Text = @{NoEmailContent.Text()}
    Speak = @{NoEmailContent.Text()}
    InputHint = expectingInput
]

# NoEmailContentForReply
[Activity
    Text = @{NoEmailContentForReply.Text()}
    Speak = @{NoEmailContentForReply.Text()}
    InputHint = expectingInput
]

# NoEmailContentForForward
[Activity
    Text = @{NoEmailContentForForward.Text()}
    Speak = @{NoEmailContentForForward.Text()}
    InputHint = expectingInput
]

# NoEmailContentWithRecipientConfirmed
[Activity
    Text = @{NoEmailContentWithRecipientConfirmedText(userName)}
    Speak = @{NoEmailContentWithRecipientConfirmedText(userName)}
    InputHint = expectingInput
]

# NoEmailContentWithRecipientConfirmedText(userName)
- @{RecipientConfirmed.Text(userName)} @{NoEmailContentForForward.Text()}

# NoRecipients
[Activity
    Text = @{NoRecipients.Text()}
    Speak = @{NoRecipients.Text()}
    InputHint = expectingInput
]

# EmailNotFound
[Activity
    Text = @{EmailNotFound.Text()}
    Speak = @{EmailNotFound.Text()}
    InputHint = acceptingInput
]

# ShowEmailPromptWithFirstLastPrefix
[Activity
    Text = @{ShowEmailPromptWithFirstLastPrefixText(totalCount, emailListDetails, showEmailIndex, showEmailCount, maxEmailPage)}
    Speak = @{ShowEmailPromptWithFirstLastPrefixText(totalCount, emailListDetails, showEmailIndex, showEmailCount, maxEmailPage)}
    Attachments = @{json(EmailOverviewCard(emailOverview))}
    InputHint = acceptingInput
]

# ShowEmailPromptWithFirstLastPrefixText(totalCount, emailListDetails, showEmailIndex, showEmailCount, maxEmailPage)
- IF: @{showEmailIndex < 0 }
    - @{FirstPageAlready.Text()} @{ShowEmailPromptAll(totalCount, emailListDetails, showEmailIndex, showEmailCount)}
- ELSEIF: @{showEmailIndex > maxEmailPage}
    - @{LastPageAlready.Text()} @{ShowEmailPromptAll(totalCount, emailListDetails, showEmailIndex, showEmailCount)}
- ELSE:
    - @{ShowEmailPromptAll(totalCount, emailListDetails, showEmailIndex, showEmailCount)}

# ShowEmailPromptAll(totalCount, emailListDetails, showEmailIndex, showEmailCount)
- IF: @{showEmailIndex <= 0}
    - @{ShowEmailPromptWithShowEmailCountFirstPage(totalCount, emailListDetails, showEmailCount)}
- ELSE:
    - @{ShowEmailPromptWithShowEmailCountOtherPage(totalCount, emailListDetails, showEmailCount)}


# ShowEmailPromptWithShowEmailCountFirstPage(totalCount, emailListDetails, showEmailCount)
- IF: @{showEmailCount == 1}
    - @{ShowOneEmailPrompt.Text(emailListDetails)}
- ELSE:
    - @{ShowEmailPrompt.Text(totalCount,emailListDetails)}

# ShowEmailPromptWithShowEmailCountOtherPage(totalCount, emailListDetails, showEmailCount)
- IF: @{showEmailCount == 1}
    - @{ShowOneEmailPromptOtherPage.Text(emailListDetails)}
- ELSE:
    - @{ShowEmailPromptOtherPage.Text(totalCount,emailListDetails)}


# EmailErrorMessage
[Activity
    Text = @{EmailErrorMessage.Text()}
    Speak = @{EmailErrorMessage.Text()}
    InputHint = acceptingInput
]

# EmailErrorMessageBotProblem
[Activity
    Text = @{EmailErrorMessageBotProblem.Text()}
    Speak = @{EmailErrorMessageBotProblem.Text()}
    InputHint = acceptingInput
]

# EmailErrorMessageAccountProblem
[Activity
    Text = @{EmailErrorMessageAccountProblem.Text()}
    Speak = @{EmailErrorMessageAccountProblem.Text()}
    InputHint = acceptingInput
]

# SentSuccessfully
[Activity
    Text = @{SentSuccessfully.Text(subject)}
    Speak = @{SentSuccessfully.Text(subject)}
    Attachments = @{json(EmailWithOutButtonCard(emailDetails))}
    InputHint = expectingInput
]

# RecipientConfirmed
[Activity
    Text = @{RecipientConfirmed.Text(userName)}
    Speak = @{RecipientConfirmed.Text(userName)}
    InputHint = acceptingInput
]

# RetryInput
[Activity
    Text = @{RetryInput.Text()}
    Speak = @{RetryInput.Text()}
    InputHint = expectingInput
]

